use std::process::{Command, exit};
use std::str;

#[derive(Serialize, Deserialize)]
struct AppActivity {
    username: String,
    app_name: String,
}

pub async fn detect_sniffing_processes(username: String) {
    let processes = vec![
        "Wireshark",
        "Fiddler",
        "tcpview",
        "EtherApe",
        "tcpdump",
        "Kismet",
        "Ettercap",
        "NetworkMiner",
        "dSniff",
        "Nmap",
        "Ngrep",
        "Netcat",
        "Tshark",
        "NetStumbler",
        "Cain and Abel",
        "BurpSuite",
        "Charles",
        "ZAP",
        "mitmproxy",
        "Sqlmap",
        "Acunetix",
        "Nikto",
        "OpenVAS",
        "AppScan",
        "W3af",
        "Skipfish",
        "WebInspect",
        "Nessus",
        "BurpScanner",
        "ZAPScanner",
        "OWASP ZAP",
        "Grendel-Scan",
        "Grabber",
        "Wapiti",
        "SQLNinja",
        "BBQSQL",
        "SQLMap",
        "Nosqlmap",
        "SQLSentinel",
        "BlindElephant",
        "dirbuster",
        "DirBuster",
        "Wfuzz",
        "SecApps",
        "skipfish",
        "AppScan",
        "W3af",
        "HTTrack",
        "Sqlninja",
        "Automated Penetration",
        "Sslyze",
        "w3af",
        "Wapiti",
        "Arachni",
        "Netsparker",
        "Wfuzz",
        "Webshag",
        "Grabber",
        "TestSSL",
        "sqlmap",
        "Zed Attack Proxy",
        "ZAP",
        "XSSer",
        "SQLMap",
        "jSQL Injection",
        "SQLSentinel",
        "OpenVAS",
        "Nikto",
        "Netsparker",
        "NESSUS",
        "Grabber",
        "Retina",
        "Skipfish",
        "Wfuzz",
        "Vega",
        "WebInspect",
        "WebScarab",
        "Wapiti",
        "N-Stealth",
        "AppScan",
        "Arachni",
        "Accunetix",
        "Sitewatch",
        "Havij",
        "Burp Scanner",
        "BurpSuite",
        "IBM Security AppScan",
        "SecurityHeaders.io",
        "NetSparker",
        "HP WebInspect",
        "Acunetix Web Vulnerability Scanner",
        "Nikto",
        "WPScan",
        "SQLMap",
        "XSStrike",
        "OpenVAS",
        "Zed Attack Proxy",
        "Nessus",
        "Grendel-Scan",
        "Nikto",
        "Arachni",
        "Wfuzz",
        "Sqlmap",
        "Skipfish",
        "OWASP ZAP",
        "Grabber",
        "Zed Attack Proxy",
        "BlindElephant",
        "w3af",
        "Vega",
        "Wapiti",
        "Skipfish",
        "Netsparker",
        "SQLNinja",
        "Grendel-Scan",
        "Wfuzz",
        "XSSer",
        "Wapiti",
        "Arachni",
        "Nikto",
        "OWASP ZAP",
        "Skipfish",
        "Nessus",
        "Aircrack-ng",
        "BeEF",
        "OWTF",
        "Metasploit",
        "Maltego",
        "OWASP ZAP",
        "Wfuzz",
        "DirBuster",
        "Vega",
        "SQLMap",
        "XSStrike",
        "Grendel-Scan",
        "W3af",
        "N-Stalker",
        "Rapid7 AppSpider",
        "SecurityHeaders.io",
        "Snyk",
        "Detectify",
        "Netsparker Cloud",
        "Sslscan",
        "Sqlninja",
        "Joomscan",
        "Lynis",
        "Golismero",
        "Websecurify",
        "OpenVAS",
        "Tenable Nessus",
        "AppSpider",
        "Qualys",
        "Postman",
        "VMware",
        "VirtualBox",
        "Parallels Desktop",
        "QEMU",
        "JD-GUI",
        "FernFlower",
        "CFR",
        "Procyon",
        "Krakatau",
        "Jadx",
        "Bytecode Viewer",
        "ApkTool",
        "IDA Pro",
        "Radare2",
        "Hopper",
        "Ghidra",
        "RetDec",
        "OllyDbg",
        "x64dbg",
        "Immunity Debugger",
        "WinDbg",
        "GDB",
        "gdbserver",
        "tcpflow",
        "tcpick",
        "tcpjunk",
        "ettercap",
        "dsniff",
        "tshark",
        "netsniff-ng",
        "NetworkMiner",
        "Yersinia",
        "Driftnet",
        "Xplico",
        "Suricata",
        "Snort",
        "Bro/Zeek",
        "Moloch",
        "Prads",
        "p0f",
        "Argus",
        "Joy",
        "NetWitness",
        "FoxyProxy"
    ];

    #[cfg(target_os = "windows")]
    let output = Command::new("tasklist")
        .output()
        .expect("Failed to execute command.");
    
    #[cfg(target_os = "macos")]
    let output = Command::new("ps")
        .arg("aux")
        .output()
        .expect("Failed to execute command.");

    let output_str = str::from_utf8(&output.stdout).unwrap_or("");

    for proc in processes {
        if output_str.contains(proc) {
            println!("Detected {} running. Exiting.", proc);
            exit(1);
        }
    }


    let netstat_output = Command::new("netstat")
        .arg("-ano")
        .output()
        .expect("Failed to execute command.");

    let netstat_str = String::from_utf8_lossy(&netstat_output.stdout);

    let proxy_keywords = vec![
        "proxy",
        "intercept",
        "burp",
        "charles",
        "fiddler",
        "mitmproxy",
        "zaproxy",
        "sslstrip",
        "sslsplit",
        "sslsniff",
        "sslnuke",
        "webscarab",
        "wifiphisher",
        "ettercap",
        "dsniff",
        "tcpdump",
        "wireshark",
        "tshark",
        "ngrep",
        "dsniff",
        "arpspoof",
        "mitmf",
        "bettercap",
        "netsniff-ng",
        "driftnet",
        "urlsnarf",
        "msgsnarf",
        "urlsnarf",
        "dsniff",
        "ferret",
        "hamster",
        "dshell",
        "inetsim",
        "mallory",
        "sslsplit",
        "dsniff",
        "sslsniff",
        "privoxy",
        "squid",
        "polipo",
        "cntlm",
        "tinyproxy",
        "brenda",
        "webslayer",
        "ratproxy",
        "cain",
        "abel",
        "xsser",
        "sqlmap",
        "nmap",
        "nikto",
        "skipfish",
        "gobuster",
        "dirbuster",
        "dirb",
        "jbrofuzz",
        "thc-ssl-dos",
        "owasp-zap",
        "beef",
        "sqlninja",
        "w3af",
        "metasploit",
        "openvas",
        "nessus",
        "arachni",
        "acunetix",
        "wpscan",
        "skipfish",
        "wmap",
        "waffit",
        "w3af",
        "skipfish",
        "retina",
        "wapiti",
        "grabber",
        "grendel-scan",
        "qualysguard",
        "netsparker",
        "webinspect",
        "fortify",
        "burpsuite",
        "zap",
        "nikto",
        "skipfish",
        "ratproxy",
        "sqlmap",
        "arachni",
        "wpscan",
        "w3af",
        "nessus",
        "openvas",
        "wapiti",
        "grabber",
        "grendel-scan",
        "netsparker",
        "webinspect",
        "fortify",
        "appscan",
        "veracode",
        "trustwave",
        "qualys",
        "nmap",
        "patator",
        "hydra",
        "medusa",
        "john",
        "hashcat",
        "ophcrack",
        "rainbowcrack",
        "cewl",
        "hping",
        "nikto",
        "lynis",
        "ossec",
        "snort",
        "suricata",
        "bro",
        "securityonion",
        "wazuh",
        "openvas",
        "nessus",
        "osquery",
        "ossec",
        "lynis",
        "lynx",
        "lynchkite",
        "lynch-kite",
        "defang",
        "debookee",
        "moriarty",
        "metagoofil",
        "powerfuzzer",
        "joomscan",
        "drupwn",
        "sqlmap",
        "nmap",
        "nikto",
        "dirbuster",
        "dirb",
        "w3af",
        "beef",
        "zmap",
        "masscan",
        "theharvester",
        "sparta",
        "maltego",
        "dmitry",
        "sublist3r",
        "recon-ng",
        "unicornscan",
        "sqlninja",
        "wpscan",
        "uniscan",
        "xsser",
        "skipfish",
        "lbd",
        "subfinder",
        "massdns",
        "thehunt",
        "sonarqube",
        "checkmarx",
        "veracode",
        "fortify",
        "findbugs",
        "splunk",
        "elkstack",
        "graylog",
        "ossec",
        "securityonion",
        "metasploit",
        "armitage",
        "social-engineer-toolkit",
        "beef",
        "sqlmap",
        "nikto",
        "w3af",
        "theharvester",
        "dnsenum",
        "fierce",
        "maltego",
        "metagoofil",
        "sublist3r",
        "recon-ng",
        "unicornscan",
        "nmap",
        "hping",
        "sslscan",
        "testssl",
        "sslyze",
        "aquatone",
        "heartbleed",
        "shellshock",
        "poodle",
        "crime",
        "beast",
        "logjam",
        "drown",
        "badlock",
        "ms08_067",
        "ms03_026",
        "ms17_010",
        "ms08_067",
        "ms17_010",
        "apache_struts2",
        "ghost",
        "shellshock",
        "heartbleed",
        "poodle",
        "logjam",
        "drown",
        "badlock",
        "cve-2019-0708",
        "cve-2020-0796",
        "cve-2021-34527",
        "cve-2021-31166",
        "cve-2021-22986",
        "cve-2021-22986",
        "cve-2021-3156",
        "cve-2021-26855",
        "cve-2021-26857",
        "cve-2021-27065",
        "cve-2021-40444",
    
];

    for keyword in proxy_keywords {
        if netstat_str.contains(keyword) {
            println!("Warning: Proxy/Interceptor detected.");
            exit(1);
        }
    }
}
